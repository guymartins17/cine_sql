<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /ws9mjEcWGKpjQAAAABJRU5ErkJggg==
</value>
  </data>
</root>